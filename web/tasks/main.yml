---
- name: Install openssl and libssl
  apt: name={{ item }} update_cache=yes state=latest
  with_items:
    - openssl
    - libssl-dev
    - libssl-doc
  tags: packages

- name: Base package install
  apt: name={{ item }} update_cache=yes force=yes state=installed
  with_items:
    - build-essential
    - git
    - python-dev
    - python-pip
    - python-pycurl
    - supervisor
  tags: packages

- name: Install virtualenv
  pip: name={{ item }}
  with_items:
    - virtualenv
  tags: packages

- name: Create the virtualenv
  command: virtualenv {{virtualenv}}--no-site-packages
           creates={{virtualenv}}/activate

- name: Create the application log folder
  file: path={{project_dir}}
        owner='{{remote_user}}'
        group='{{remote_user}}'
        state=directory

- name: Create the virtualenv postactivate script to set environment variables
  template: src=postactivate_template.j2
            dest={{virtualenv}}'/postactivate'
            owner='{{remote_user}}'
            group='{{remote_user}}'
            backup=yes

- name: Pull latest code from github
  git: repo={{github_repo}} dest={{project_dir}} update=yes accept_hostkey=yes
  tags: 
    - git 
    - deploy

- name: Create a log directory for supervisor
  file: path={{project_dir}}/supervisord
        owner='{{remote_user}}'
        state=directory

- name: Generate configuration file for supervisor
  template: src=supervisor_config_template.j2
            dest=/etc/supervisor/conf.d/{{application_name}}.conf
            backup=yes

- name: Reload supervisor configuration files if modified
  command: supervisorctl reread

- name: Update Supervisor to add the app in the process group
  command: supervisorctl update

- name: Initialise log rotation for Supervisord
  template: src=supervisor_log_template.j2
            dest='/etc/logrotate.d/'{{application_name}}'-supervisor.log'
            owner='{{remote_user}}'
            group='{{remote_user}}'

- name: Install django application requirements in virtualenv
  sudo: yes 
  pip: virtualenv={{virtualenv}} requirements={{django_requirements}}
  tags:
    - requirements 

- name: Run makemigrations command
  sudo_user: '{{remote_user}}'
  sudo: yes
  shell: . {{virtualenv}}/activate && . {{virtualenv}}/postactivate && cd '{{project_dir}}' && python manage.py makemigrations --noinput
  when: run_django_syncdb
  tags: 
   - django 
   - syncdb

- name: Run migrate command
  sudo_user: '{{remote_user}}'
  shell: . {{virtualenv}}/activate &&  . {{virtualenv}}/postactivate
         && cd '{{project_dir}}' && python manage.py migrate --noinput
  when: run_django_migrations
  tags: 
    - django 
    - migrate

- name: Generate static django files for application
  shell: . {{virtualenv}}/activate && . {{virtualenv}}/postactivate
         && cd '{{project_dir}}' && python manage.py collectstatic --noinput
  when: run_django_collectstatic
  tags: 
    - django 
    - collectstatic 
    - deploy


